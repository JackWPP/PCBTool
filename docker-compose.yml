version: '3.8'

services:
  # PCB工具后端服务
  pcb-tool-backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./pcb_tool.db
      - SECRET_KEY=your-production-secret-key-change-this
      - API_KEY_DIFY=${API_KEY_DIFY}
      - CODE_API_KEY_DIFY=${CODE_API_KEY_DIFY}
      - NVIDIA_API_KEY=${NVIDIA_API_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pcb-network

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - pcb-network

  # PostgreSQL数据库（可选，用于生产环境）
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pcb_tool
      - POSTGRES_USER=pcb_user
      - POSTGRES_PASSWORD=pcb_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - pcb-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - pcb-tool-backend
    restart: unless-stopped
    networks:
      - pcb-network

volumes:
  redis-data:
  postgres-data:

networks:
  pcb-network:
    driver: bridge